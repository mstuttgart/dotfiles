---
- name: Update package cache
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
  become: yes

- name: Install development requirements packages
  package:
    name:
      - git
      - locales
      # Dependencias do Odoo
      - libxml2-dev
      - libxslt-dev
      - libevent-dev
      # Dependencias PyTrustNFe
      - pandoc
      # Dependencias WKHTMLTOPDF
      - fontconfig
      - libx11-6
      - libxext6
      - libxrender1
      - libjpeg-turbo8
      - xfonts-75dpi
      - xfonts-base
      # Microsoft fonts
      - ttf-mscorefonts-installer
      # Dependencias de compilacao
      - build-essential
      - make
      - cmake
      - checkinstall
      - cdbs
      - devscripts
      - dh-make
      - fakeroot
      - libxml-parser-perl
      - check
      - avahi-daemon
      - curl
      - g++
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      # Dependencia Python
      - python3-dev
      - python3-pip
      - python3-venv
      - libffi-dev
      # Dependencias Pyxmlsec
      - xmlsec1
      - openssl
      - python3-lxml
      - libxmlsec1
      - libxmlsec1-dev
      # Dependencias Pillow
      - libjpeg-dev
      - libfreetype6-dev
      - zlib1g-dev
      - libpng-dev
      # Dependencias psycopg2
      - libpq-dev
      # Dependencias python-ladp
      - libsasl2-dev
      - libldap2-dev
      - libssl-dev
      # Dependencias matplotlib
      - pkg-config
      - libpng-dev
      - libjpeg8-dev
      - libfreetype6-dev
      # Dependencias auto-backup
      - libpq-dev
      # Dependencias Node
      - node-clean-css
      - node-less
      # Others requirements
      - software-properties-common
      - p7zip
      - p7zip-full
      - p7zip-rar
      - unrar
      - rar
      - unace-nonfree
      - ubuntu-restricted-extras
    state: present
  become: yes

# Set locale to pt_BR :::::::::::::::::::::::::::::::::::::

- name: Set 'pt_BR' locale in system
  locale_gen:
    name: pt_BR.UTF-8
    state: present

- name: Set 'pt_BR' locale as default
  command: localectl set-locale LANG=pt_BR.UTF-8
  tags:
    - skip_ansible_lint

# wkhtmltopdf :::::::::::::::::::::::::::::::::::::

- name: Check wkhtmltopdf package status
  command: dpkg-query -W wkhtmltox
  register: wkhtmltox_check_deb
  failed_when: wkhtmltox_check_deb.rc > 1
  changed_when: wkhtmltox_check_deb.rc == 1

- name: Download wkhtmltopdf
  get_url:
    url: https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb
    dest: '/home/{{ ansible_env.USER }}/wkhtmltox.deb'
  when: wkhtmltox_check_deb.rc == 1

- name: Install wkhtmltopdf
  apt:
    deb: '/home/{{ ansible_env.USER }}/wkhtmltox.deb'
  become: yes
  when: wkhtmltox_check_deb.rc == 1

- name: Delete wkhtmltox.deb file
  file:
    path: '/home/{{ ansible_env.USER }}/wkhtmltox.deb'
    state: absent

- name: Create symbolic link to wkhtmltopdf
  file:
    src: '/usr/local/bin/wkhtmltopdf'
    dest: '/usr/bin/wkhtmltopdf'
    state: link
  become: yes

- name: Create symbolic link to wkhtmltoimage
  file:
    src: '/usr/local/bin/wkhtmltoimage'
    dest: '/usr/bin/wkhtmltoimage'
    state: link
  become: yes

# Install deb packages :::::::::::::::::::::::::::::::::::::

- name: Install development requirements packages
  package:
    name:
        - gpick
        - tree
        - neofetch
        - tig
        - flameshot
        - pgadmin3
        - snapd
        - vlc
        - libreoffice
        - fonts-firacode
        - dconf-cli
        - uuid-runtime
    state: present
  become: yes

# Google Chrome ::::::::::::::::::::::::::::::::::::

- name: Check chrome package status
  command: dpkg-query -W google-chrome-stable
  register: google_chrome_stable_check_deb
  failed_when: google_chrome_stable_check_deb.rc > 1
  changed_when: google_chrome_stable_check_deb.rc == 1

- name: Download Google Chrome
  get_url:
    url: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    dest: '/home/{{ ansible_env.USER }}/google_chrome_stable.deb'
  when: google_chrome_stable_check_deb.rc == 1

- name: Install Google Chrome
  become: yes
  apt:
    deb: '/home/{{ ansible_env.USER }}/google_chrome_stable.deb'
  when: google_chrome_stable_check_deb.rc == 1

- name: Delete google_chrome_stable.deb file
  file:
    path: '/home/{{ ansible_env.USER }}/google_chrome_stable.deb'
    state: absent

# bat ::::::::::::::::::::::::::::::::::::

- name: Check bat package status
  command: dpkg-query -W bat
  register: bat_check_deb
  failed_when: bat_check_deb.rc > 1
  changed_when: bat_check_deb.rc == 1

- name: Download bat
  get_url:
    url: https://github.com/sharkdp/bat/releases/download/v0.18.3/bat_0.18.3_amd64.deb
    dest: '/home/{{ ansible_env.USER }}/bat.deb'
  when: bat_check_deb.rc == 1

- name: Install bat - cat(1) clone with wings.
  become: yes
  apt:
    deb: '/home/{{ ansible_env.USER }}/bat.deb'
  when: bat_check_deb.rc == 1

- name: Delete bat.deb file
  file:
    path: '/home/{{ ansible_env.USER }}/bat.deb'
    state: absent

# Install snap packages ::::::::::::::::::::::::::::::::::

- name: Install snap packages
  become: yes
  snap:
    name: 
      - core
      - postman
      - bottom

- name: Install VsCode snap package
  become: yes
  snap:
    name: code
    classic: yes

- name: Setup vscode keybindings'
  file:
    src: '{{ role_path }}/files/.config/Code/keybindings.json'
    dest: '{{ ansible_env.HOME }}/.config/Code/User/keybindings.json'
    state: link
    force: yes

- name: Setup vscode settings
  file:
    src: '{{ role_path }}/files/.config/Code/settings.json'
    dest: '{{ ansible_env.HOME }}/.config/Code/User/settings.json'
    state: link
    force: yes

- name: Setup vscode extension
  shell: cat '{{ role_path }}/files/.config/Code/extensions.txt' | xargs -n 1 code --install-extension


# Configure Settings Files ::::::::::::::::::::::::::::::::::::::::

- name: Add Google Search on /etc/hosts file
  become: yes
  blockinfile:
    create: yes
    dest: /etc/hosts
    marker: '## {mark} added by ansible (Configure Google Safe Search)'
    block: |
      216.239.38.120 www.google.com

# Install nvm

- name: nvm
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
  args:
    creates: '{{ ansible_env.HOME }}/.nvm/nvm.sh'

# Install and configure postgresql

- name: Install Postgresql
  become: yes
  package:
    name:
      - postgresql
      - postgresql-contrib
      - libpq-dev
      - python3-psycopg2
    state: present

- name: Enable postgresql
  become: yes
  systemd:
    name: postgresql
    enabled: yes
    state: started
    daemon_reload: yes

- name: Create user and role '{{ postgresql_db_user }}'
  become: yes
  become_user: postgres
  postgresql_user:
    state: present
    name: '{{ postgresql_db_user }}'
    password: '{{ postgresql_db_user_password }}'
    role_attr_flags: NOSUPERUSER,CREATEDB
